@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ================================================================================================ ================================================== ================================================== ================================================== =====================
//&display=swap - добавить при подключении через плагин
@import url(https://fonts.googleapis.com/css?family=Cormorant+Upright:regular,600,700&display=swap);
@import url(https://fonts.googleapis.com/css?family=Open+Sans:regular,italic,600&display=swap);

// Подключить, если есть локальные файлы шрифтов
//@import "fonts/fonts";

// Подключение иконочных шрифтов =============================================================================================== ================================================== ================================================== ================================================== =========================
// Подключить, если есть файл иконочного шрифта
//@import "fonts/icons";

// ============================================================================================================================================================================================================================================================================================================================================================================================
// Настройка шаблона ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// По умолчанию шрифт ==============================================================================================================================================================================================================================================================================
$fontFamily: "Open Sans";
$fontSize: rem(16); // где 16(px) - размер шрифта по умолчанию с макета
$fontWeight: 400;

// Основные цвета
$mainColor: #aaa; // Цвет шрифта по умолчанию
$secondaryColor: #dcca87;
$secondaryLight: #fff;
$bgColor: #0c0b08;

// Настройка адаптивной сетки ===============================================================================================================================================================================================================================================================================================

// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1300;
// Общее отступление у контейнера
// (30 = по 15px слева и справа, 0 = нет отступления)
$containerPadding: 30;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинту (контейнер изменяет свою ширину по брейк-поинту)
$responsiveType: 1;

// ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Обнуление ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

// Стили тега BODY ============================================================================================================================================================================================================================================================================================================================================================================================

body {
  background: $bgColor;
  // Скролл заблокирован
  .lock & {
    overflow: hidden;
    touch-action: none;
    overscroll-behavior: none;
  }
  // Сайт загружен
  .loaded & {
  }
}

// Оболочка wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  @supports (overflow: clip) {
    overflow: clip;
  }
  // Прижимаем footer
  > main {
    flex: 1 1 auto;
    position: relative;
    z-index: 2;
  }
  // Фикс для слайдеров
  > * {
    min-width: 0;
  }
}
// Обмежуючий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам, содержащим *__container 
Например, header__container, main__container и т.п. 
Сниппет (HTML): cnt
*/

@if ($responsiveType==1) {
  // Отзывчивая
  [class*="__container"] {
    @if ($maxWidthContainer>0) {
      max-width: rem($containerWidth);
      margin: 0 auto;
    }
    @if ($containerPadding>0) {
      @if ($maxWidthContainer>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      } @else {
        @include adaptiveValue("padding-left", math.div($containerPadding, 2), 15);
        @include adaptiveValue("padding-right", math.div($containerPadding, 2), 15);
      }
    }
  }
  [class*="__container_wide"] {
    max-width: rem(1680);
  }
} @else {
  // Брейк-поинты
  [class*="__container"] {
    margin: 0 auto;
    @if ($maxWidthContainer>0) {
      max-width: rem($containerWidth);
    } @else {
      @if ($containerPadding>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
    @media (max-width: $pc) {
      max-width: rem(970);
    }
    @media (max-width: $tablet) {
      max-width: rem(750);
    }
    @media (max-width: $mobile) {
      max-width: none;
      @if ($containerPadding>0 and $maxWidthContainer>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
  }
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных классов
// Для подключения/выключения конкретных стилей base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";

// Подключение стилей отдельных страниц
@import "home";
